// *** The-7-1-pattern
// |– layout/                # Major page structure (grid systems, header/footer, sidebar)
// |   |– _navigation.scss   # Navigation
// |   |– _grid.scss         # Grid system
// |   |– _header.scss       # Header
// |   |– _footer.scss       # Footer
// |   |– _sidebar.scss      # Sidebar
// |   |– _forms.scss        # Forms
// |   …                     # Etc.
// NOTE: The layout/ folder might also be called partials/, depending on what you prefer.

// *** CUBE Integration: 
// This is where your Compositional layout classes live. These classes define structural patterns for arranging content on a page.
// These classes are typically applied directly to HTML elements to manage their children's layout.
// Example: _grid.scss (e.g., .l-grid), _stack.scss (e.g., .l-stack), _container.scss (e.g., .l-container). These classes are typically applied directly to HTML elements to manage their children's layout.


// @forward "grid";

@use "../abstracts" as *;

/* --- Layout: Header */
.l-header {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: var(--space-2xl);
}

/* --- Layout: Footer */

/* --- Layout: Main */
.l-main {
  display: grid;
  grid-template-columns: 1fr; // To avoid fixed value column
  // height: 100vh;
  justify-items: center;
  align-items: center;
  // padding-block: var(--space-2xl);
}

/* --- Layout: Tip Calculator */
.l-calc {
  display: grid;
  grid-template: auto auto / auto;
  gap: var(--space-2xl-3xl);
  max-width: to-rem(920);

  @include mq_up(large) {
    grid-template: auto / 10fr 11fr;
  }
}
.l-calc-in {
  display: grid;
  gap: var(--space-2xl-3xl);
}
.l-calc-out {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: var(--space-2xl-8xl);
}

/* --- Layout: Footer */
.l-footer {
  margin-block: 3rem;
  text-align: center;
}